name: Rust Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main

jobs:
  build_and_release:
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            asset_name: kuaa-intel
          - target: aarch64-apple-darwin
            asset_name: kuaa-arm

    steps:
      - uses: actions/checkout@v2
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          
      - name: Add target ${{ matrix.target }}
        run: rustup target add ${{ matrix.target }}

      - name: Build for ${{ matrix.target }}
        run: cargo build --release --target ${{ matrix.target }}
        env:
          CARGO_BUILD_TARGET: ${{ matrix.target }}

      - name: Rename binary
        run: mv target/${{ matrix.target }}/release/kuaa target/${{ matrix.target }}/release/${{ matrix.asset_name }}

      # Create and upload a release only on push to main branch
      - name: Create and Upload Release Asset
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="v$(date +'%Y.%m.%d')-${GITHUB_RUN_NUMBER}"
          RELEASE_NAME="Release $TAG_NAME"
          
          # Create a release
          RELEASE_ID=$(gh release create $TAG_NAME \
            --title "$RELEASE_NAME" \
            --notes "Release notes or changelog" \
            --draft \
            --target ${{ github.ref }} \
            --json id | jq .id)
          
          # Upload the asset
          gh release upload $TAG_NAME \
            "./target/${{ matrix.target }}/release/${{ matrix.asset_name }}" \
            --clobber
          
          # Publish the release
          gh release edit $TAG_NAME \
            --draft=false
        shell: bash
